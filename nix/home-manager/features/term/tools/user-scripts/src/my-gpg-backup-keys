#!/usr/bin/env bash

set -e

BACKUP_DATE=$(date "+%Y-%m-%d")

# Test defined var
if [ -z "$GPG_BACKUP_DIR" -o -z "$GPG_USERID" ]; then
    echo "Please define GPG_BACKUP_DIR or GPG_USERID vars"
    exit 1
fi

# Test folder exists
if [ ! -d "$GPG_BACKUP_DIR" ]; then
    echo "Please mount the '${GPG_BACKUP_DIR}' disk"
    exit 1
fi

# Create new backup dir
BACKUP_DIR="${GPG_BACKUP_DIR}/${BACKUP_DATE}"
mkdir -p ${BACKUP_DIR}
# Create last link dir
LASTKEYS="${GPG_BACKUP_DIR}/lastkeys"
rm -f ${LASTKEYS}
ln -s ${BACKUP_DIR} ${LASTKEYS}

# Backup public key
gpg -a --export ${GPG_USERID} >${LASTKEYS}/public_key.gpg

# Backup ownertrust
gpg -a --export-ownertrust >${LASTKEYS}/ownertrust.asc

# Backup primary key (store only in sure place(encrypted USB key))
gpg -a --export-secret-keys ${GPG_USERID} >${LASTKEYS}/secret_key.gpg

# Backup sub keys (you can store in less sure place, but evit it :))
gpg -a --export-secret-subkeys ${GPG_USERID} >${LASTKEYS}/secret_subkeys.gpg

# Backup revocation file
# cp ~/.gnupg/openpgp-revocs.d/${GPG_USERID}.rev ${LASTKEYS}/revocation.asc
